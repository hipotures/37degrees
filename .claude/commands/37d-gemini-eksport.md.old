# Gemini Export - Automatyzacja

# MCP używane w tym procesie, żadne inne nie powinny być użyte
- todoit
- playwright-cdp

# Bezwzględnie wykonuj polecenia w tym dokumencie, nie wykonuj żadnych innych, ściśle trzymaj sie poleceń

## Krok 0: Pobranie pozycji do przetworzenia
Sprawdź pierwszą pozycję ze statusem "in_progress" z listy gemini-deep-research używając MCP todoit:

```
todo_get_list_items (MCP)(list_key: "gemini-deep-research", status: "in_progress")
```

Przykład wyniku: `0002_animal_farm` - "Deep Research for Animal Farm by George Orwell"

## Krok 1: Wyszukanie chatu z książką
1. Połącz się z MCP playwright-cdp - jeśli nie ma połączenia, zgłoś błąd.
2. Przejdź do: `https://gemini.google.com/search`
3. W polu "Szukaj czatów" wpisz klucz książki (np. `0002_animal_farm`)

## Krok 2: Wybór odpowiedniego chatu
1. Z listy wyników wybierz chat o nazwie dokładnie pasującej do klucza (1:1 nazwa)
2. Kliknij na odpowiedni chat, aby go otworzyć

⚠️ **UWAGA**: Błędy z dużymi odpowiedziami (>25000 tokens) należy ignorować - automatyzacja działa dalej w tle

## Metoda działania

```javascript
() => document.querySelector('button[data-test-id="export-menu-button"]').click()
```

## Elementy do kliknięcia

1. **Przycisk Eksportuj** (menu dropdown):
```html
<button data-test-id="export-menu-button" class="mdc-button mat-mdc-button-base...">
  <span>Eksportuj</span>
</button>
```

2. **Eksportuj do Dokumentów** (opcja w menu):
```html
<button data-test-id="export-to-docs-button" class="mat-mdc-menu-item...">
  <span>Eksportuj do Dokumentów</span>
</button>
```

## Sekwencja działań

### W Gemini:
1. Kliknij `button[data-test-id="export-menu-button"]` 
2. Następnie kliknij `button[data-test-id="export-to-docs-button"]`

### W Google Docs (nowa karta):
3. Przełącz na nową kartę z Google Docs (`browser_tab_select` z indeksem 1)
4. Kliknij menu "Plik"
5. Kliknij "Pobierz" 
6. Wybierz "Zwykły tekst (.txt)"

## Użyte narzędzie
- `mcp__playwright-cdp__browser_evaluate` z prostym JavaScriptem
- `mcp__playwright-cdp__browser_click` dla elementów w Google Docs

## Lokalizacja pobranego pliku
Plik TXT zostanie zapisany w: `/tmp/playwright-mcp-output/[timestamp]/[nazwa-dokumentu].txt`
Jeśli pliku nie ma, ponów od punktu 4. w tym kroku.

## Przeniesienie do struktury projektu
1. Sprawdź tytuł i autora w pierwszych liniach pliku
2. Znajdź odpowiedni katalog książki: `books/NNNN_book_name/`
3. **Przenieś** plik do: `books/NNNN_book_name/docs/review.txt`

⚠️ **UWAGA**: Używaj `mv` zamiast `cp` aby nie zapychać `/tmp/playwright-mcp-output/`!

Przykład:
```bash
mv "/tmp/playwright-mcp-output/[timestamp]/nazwa-pliku.txt" "/home/xai/DEV/37degrees/books/0001_alice_in_wonderland/docs/review.txt"
```

## Oznaczenie jako ukończone w TODOIT
Po zakończeniu procesu oznacz zadanie jako completed:

```
todo_mark_completed (MCP)(list_key: "gemini-deep-research", item_key: "0001_alice_in_wonderland")
```

## Ostatnie polecenie
1. Zamknij zakładkę Google Docs (np użyj `browser_tab_close`)
2. Powinna zostać tylko jedna karta 